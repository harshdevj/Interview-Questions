Project Name & Project Description 

(Please be very detailed and technical in your description, this case depends upon it!):



	Core Foreign Exchange (CoreFX)
CoreFX is a suite of applications for Front Office, Middle Office and Back Office operations for the FX Trading Business. It requires a significant enhancement as per the 2023 business initiatives and the new compliance’s to be fulfilled.
Synechron will provide the Application Business Analysis, Technical Design and Development Services for CoreFX suite of FX Applications.

Wells Fargo Securities conducted a comprehensive assessment of Foreign Exchange (FX) Sales & Trading practices to identify areas requiring enhancement and remediation to align with regulatory expectations and the FX Global Code.

Remediation efforts are focusing on Corrective Actions and Matters Requiring Attention. Efforts currently underway to address Corrective Actions and other technology related enhancements needed for FX. Over 120 Corrective Actions and eight Matters Requiring Attention have been identified within FX that have deliverables for multiyear. The benefit in addressing these items will assist in improving and providing operational effectiveness for FX overall in areas related to Onboarding/Pre-Trade, Disclosures, Sales Order & Pricing, Trade Execution, Front Office, FX Services, Compliance Program, Post Trade and Operational Loss, Refunds, and Accommodations.
Objective is to identify areas requiring enhancements and remediation in response to audit / regulatory requirement.
This will include but is not limited to following key deliverables  
•	Position Management Enhancements (AFX2.0)
•	ETR – Safety and Soundness (Mulesoft, EOL, SecureFX, BSWIFT, FXDesktop)
•	PROD/CTE Environment
•	Regulatory Reporting Consolidation and Simplification
•	Front Office Capabilities (Booking model : UI and Trade Service)
•	Booking Model – Pricing of the Block Trades.





This will include but is not limited to following key applications and below is the list. 
•	FX AIP 
•	FX Shared Reporting Services 
•	FX Desktop 
•	FX Reference Data Service 
•	FX AFX 
•	FX QTZ Credit Service 
•	FX QTZ Pricing 
•	FX Datagrid 
•	FX QTZ Emerald
•	FX QTZ Onyx 
•	FX QTZ Payment Confirm / Tracker 
•	FX QTZ Ruby 
•	FX QTZ Trade Booking 
•	FX QTZ Trade Capture Service
Detailed Job Description Requirements:

1.	The Job Description is to be about the position the employee will have IN THE US, NOT what they have done in the past.  

2.	This should NOT be a resume; it must detail the duties of what the person WILL BE doing in the US for your company.

3.	Please note that this MUST COME FROM HR OR THE PROJECT MANAGER & must be technical in nature to explain, in detail, the specialized nature of this position. 

4.	This description must include technologies & processes to be used & should be as thorough & specific/detailed as possible (per USCIS). 

5.	Please include percentage of time the employee is expected to spend on each task.  The total time for all tasks should total 100%, no more, no less.

6.	IF THIS IS AN EXTENSION ONLY (NO CHANGES TO DUTIES OR WORK LOCATION) from last/original filing: please be sure to list as Continuation of duties: i.e.: 

•	Mr./Mrs. _____ will continue to work with….  

•	Mr./Mrs. _____ will continue to be responsible for….	List the Job Description for the US Position here (see left side of this section for important information before listing job description):

Mr. Joshi has been working on the Front Office and Back Office application as a Software Developer since last 6 years and have a sound knowledge of JAVA/J2EE programming technologies as well as all the Front/Back Office processing of the FX trades.  Mr. Joshi will work as a Specialist-Technology/Software Developer on FX QTZ Emerald  and CoreFX Projects and will serve following duties and responsibilities:

● System Requirement & Analysis : 
➢ Mr. Joshi, being experienced JAVA/J2EE professional, will continue to work as Specialist-Technology/Software Developer on the FX Remediation Projects. He will be responsible to work on requirement gathering, analysis and enhancement of Foreign Exchange Platform systems, exploring innovative solutions and giving his inputs from technical perspective. He will provide effort estimation for Web and API based FX products with special focus on web/ cloud ready, low latency and high throughput systems. He will conduct sessions with Senior level Business Managers and Business Analysts to study, evaluate and analyze new business requirements/technical System and document all Functional and Non-Functional requirements. Mr. Joshi will continue to work with Business Analysts and Product Owners to assist in modularizing requirements into smaller Business stories suitable for Agile development and preparing high level estimates and delivery documents to map technical deliverables against actual business requirements. He will also Identify test scenarios based on the requirements by utilizing ATDD (Acceptance Test Driven Development) and BDD (Behavior-Driven Development) development approaches. 
[Percentage of time devoted : 10%]


● High Level System Design : 
➢ Mr. Joshi will continue to be involved in system design sessions to assist in producing initial Conceptual design and High-Level Design artifacts by applying and utilizing his extensive software design knowledge to design new/existing FX software system using Visio and Rational Software Architect design tools such as UML. He will continue to be actively participate in creation/documentation of detailed functional design documents to match technical deliverables against business requirements. He will collaborate with Scrum Master to write technical deliverable JIRA tasks for each Sprint to track the project development delivery. 

➢ Mr. Joshi will continue to be responsible to Create architecture/infrastructure diagrams covering load balancers, proxies, application servers, database, and connectivity to FX QTZ Emerald. He will also prepare architectural design for Web & API services, Caching solutions, data model and database to illustrate application workflow and integration with rest of the FX applications. Mr. Joshi will continue to conduct high level design walkthrough and review sessions to business & technology persons and end users to validate if the design meets Functional and Non-Functional requirements. He will frequently schedule review sessions with Technology Architects to ensure that system meets all the technical and security aspects keeping functionality intact. 
[Percentage of time devoted : 5%]


● Development, Coding/Programming and System Performance Evaluation : 
➢ Mr. Joshi has extensive experience in JAVA/J2EE technologies which he will continue to use extensively for developing Web ready FX QTZ Emerald systems to enrich and augment FX trade requests by providing universal reference data for FX Trading Platforms, which involves many areas in Software Engineering like Data Structure and Algorithm, JAVA Design Patterns, Multithreading, Thread Safety, Micro-services, Open source frameworks like Spring Framework and all subcomponents of Spring such as Spring AOP, Spring Web Services, Spring Security, Spring MVC, Spring JMS for Integrating existing applications to the FX platform. Mr. Joshi will continue to Develop, Write and Modify software programs/code on use cases according to System Design requirements and Product Functionality specifications finalized by Technical and Business Architecture team. He will be responsible to code and develop SOAP and REST web services for large and complex distributed FX QTZ Emerald systems. 
[Percentage of time devoted : 10%] 

➢ With his Expertise in JAVA, Mr. Joshi will continue to devote his time to develop REST Web Services using Spring REST template to provide reliable and synchronous communication layer between User Interface and Server applications, which will be part of greater FX platform application domain. In addition to this, He will implement business logic for FX QTZ Emerald application to automate business operations to meet business expectations. He will also develop Exception handling framework to be shared and reused across multiple applications for handling infrastructure and non-infrastructure exceptions scenario. Mr. Joshi will continue to follow through to implement more secured security solution using Voltage Data Centric Encryption technology to secure sensitive data and replace external property files with Oracle Coherence Data Grid caching. 
[Percentage of time devoted : 10%] 

➢ Mr. Joshi will continue to apply his expertise to develop Oracle Coherence Caching systems which is high availability in memory Data grid distributed caching mechanism that supports extreme scaling, increased performance and improved reliability for applications and middleware. This caching application will be used by all the underlying applications which are directly or indirectly dependent on static data provided by FX QTZ Emerald (The FX application). Mr. Joshi will also continue to create Data Grid Client API to Add, Retrieve Update and Delete data from Oracle Coherence Data Grid Cache for fast reliable access and process real time Foreign Exchange trade systems data. He will be responsible to develop DataGrid Schema model and publish to DataGrid. 
[Percentage of time devoted : 5%] 

➢ During Code Development phase Mr. Joshi will continue to utilize and implement Object Oriented concepts such as Abstraction, Polymorphism and Inheritance, Data Structures such as Arrays, Queue, Linked List and Searching, Sorting Algorithms to improve System scalability and performance, dependency injection to achieve code decoupling using Spring MVC (Model View Controller) framework. He will be actively involved in code development and implementation to materialize front and back office FX applications, which will streamline business workflow as stated by business users. 
[Percentage of time devoted : 10%] 

➢ To performance tune the applications, Mr. Joshi will continue to be responsible for System Performance profiling which involves usage of JVM Performance Metrics, AppDynamics, Oracle JAVA Mission Control, Eclipse Memory Analyzer tools to analyze, evaluate and optimize software system performance for any possible memory leakage, proper garbage collection, optimal CPU and memory usage, Number of Active threads and propose technical/design changes for better performance and fix upon approval from Architects and Quality Engineering team. Mr. Joshi will also continue to  responsible to write Unit tests, Integration tests using Junit, Mockito , Maven test plugin to validate and ensure defect free code. He will also generate code coverage/quality reports by using EclEmma, scan developed code using Findbugs to find defects and /or suspicious code. He will be the lead developer to identify and apply correct strategy to fix any bug/defect flagged by these tools, while ensuring to have minimal and effective code changes without compromising application performance and security. 
[Percentage of time devoted : 10%] 

➢ Mr. Joshi will continue to be responsible to develop data access framework using MyBatis / Hibernate for data insert and update operations with Oracle DB and Create Database connection factories, performance tune to connect to Oracle database for data storage and retrieval. He will also undertake tasks to write and execute DDL (Data Definition Language) and DML (Data Manipulation Language) database scripts for application data operations, mainly for FX QTZ Emerald applications. Mr. Joshi will continue to write stored procedures and functions to carry out certain database functionalities with his Database Management skill set. He has specialized Database knowledge to implement data auditing mechanisms within Oracle database using triggers and stored procedures. He has expertise in application reports designing using Report Designing tools like Jasper Reports, BIRT Reports, which will be utilized to generate and automate business specific reports based on end user specifications. This also involves specific database knowledge to write database Views, Functions and complex SQL queries, which will be data inputs to report generation. Mr. Joshi will continue to perform database performance tuning to speedup Oracle database operations by applying Database Normalization techniques, Indexes, Paging and Query Execution plan. 
[Percentage of time devoted : 10%] 

➢ Mr. Joshi, as a Specialist-Technology/Software Developer, will conduct peer code reviews of the developed code, fix any issues and setup review with architects and Quality Assurance (QA) team. He will also be involved in review the architecture and logical/sequence diagrams for each use case, incorporate the feedback or review comments given by the System Architecture team and update the same in technical design document. He will attend development and defect status meetings with business/client to present development status. As a lead developer, he will be leading application development team in such meetings and coordinate with offshore team to streamline development efforts. He will highlight the risks or any road block ahead of time that may potentially impact application development. 
[Percentage of time devoted : 5%]


● System Integration, Testing and Defects Fix : 
➢ Mr. Joshi will continue to be accountable for analyzing, troubleshooting and resolving defects raised by Quality Assurance team during System and User Acceptance Testing Phase Cycle and will coordinate with Quality Assurance team to get the fixed issues tested on specific environment. He will closely work with End Users of Application for User Acceptance test and collect feedback from users. Mr. Joshi will continue to coordinate with End Users of the application and understand their response over the delivery. He will also be interacting with them to understand their expectations and will ensure the quality of the testing is high. 
[Percentage of time devoted : 5%] 


➢ Mr. Joshi will continue to be engaged in Design, run and monitor software performance tests, load tests on new and existing programs for the purposes of correcting errors, isolating areas for improvement, and general debugging. He has extensive experience of implementing Base Practices of Quality Assurance domain to prevent the defects and following high quality coding standards. Mr. Joshi will be reporting all the issues in ALM / JIRA and will provide updates to business/client in the reoccurring meetings which will be organized by him / Business. 
[Percentage of time devoted : 5%]


● Build, Deployment and Release Management: 
➢ Mr. Joshi will continue to Setup and Run continuous integration testing jobs using tools such as Jenkins, uDeploy, Fortify, SONAR and continuously monitor for code quality and build failure reports. He will also work with Technical Environment Analyst to configure and setup application/web servers such as JBoss, WebLogic, Apache; execute CLI (Command Line Interface) Scripts, Configure Autosys job, execute DML and DDL scripts for Database, build and deployment of applications using Jenkins, uDeploy and Artifactory in all development, Test, Production and Disaster recovery environments. He will schedule build deployment in testing environments to provide bug fixes in timely manner to quality assurance team to get it thoroughly tested before production release. He will also prepare release notes along with each build to provide assistance to testing team. He will be accountable for frequently monitoring application and server logs to troubleshoot and fix application issues and make sure developed system is error free. 
[Percentage of time devoted : 5%]

 ➢ Mr. Joshi will continue to coordinate with Release and Environment Management team to make sure smooth execution of PRODUCTION release. As a lead developer, he will be accountable for ensuring the system and server configurations such as JMS queues, Autosys job scheduling, JBoss configurations, load balancer and proxies before PRODUCTION deployment. He will assist Technical Analyst / Environment Management team during PRODUCTION release to handle any unforeseen issues, if any. 
[Percentage of time devoted : 5%]


● Post Production Application Support: 
➢ Post PRODUCTION deployment, Mr. Joshi will continue to assist System Engineers in managing Production environments, installing/upgrading projects configurations. He will continue to provide technical support to application support team to identify and troubleshoot project issues and suggest a resolution. He will continue to Create Utilities and Knowledge items for recovery of any failure scenario. Mr. Joshi will continue to engage with support team periodically to perform technical checkouts in production environment for any new enhancement, performance check, defect fix or maintenance releases. Mr. Joshi will continue to be involved in bug fix, minor enhancements or code patching as part of maintenance support as and when a new business requirement arises. 
[Percentage of time devoted : 5%]

